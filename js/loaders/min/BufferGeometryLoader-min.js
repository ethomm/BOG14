THREE.BufferGeometryLoader=function(r){this.manager=void 0!==r?r:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(r,a,t,e){var n=this,o=new THREE.XHRLoader(n.manager);o.load(r,function(r){a(n.parse(JSON.parse(r)))},t,e)},parse:function(r){var a=new THREE.BufferGeometry,t=r.data.index,e={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(void 0!==t){var n=new e[t.type](t.array);a.setIndex(new THREE.BufferAttribute(n,1))}var o=r.data.attributes;for(var i in o){var d=o[i],n=new e[d.type](d.array);a.addAttribute(i,new THREE.BufferAttribute(n,d.itemSize))}var y=r.data.groups||r.data.drawcalls||r.data.offsets;if(void 0!==y)for(var f=0,u=y.length;f!==u;++f){var A=y[f];a.addGroup(A.start,A.count,A.materialIndex)}var E=r.data.boundingSphere;if(void 0!==E){var v=new THREE.Vector3;void 0!==E.center&&v.fromArray(E.center),a.boundingSphere=new THREE.Sphere(v,E.radius)}return a}};